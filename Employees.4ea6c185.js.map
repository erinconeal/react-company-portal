{"mappings":"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","sources":["src/Employees.tsx","src/EmployeeListItem.tsx","src/CardList.tsx"],"sourcesContent":["import { useEffect, useState, FunctionComponent } from \"react\";\nimport EmployeeListItem from \"./EmployeeListItem\";\nimport CardList from \"./CardList\";\nimport { RandomUserAPIResponse, CurrentUser } from \"./APIResponsesTypes\";\n\nconst localCache: {\n  employees: CurrentUser[][];\n} = { employees: [] };\n\nconst Employees: FunctionComponent = () => {\n  const [, setEmployees] = useState<CurrentUser[][]>([]);\n  const [accounting, setAccounting] = useState<CurrentUser[]>([]);\n  const [informationTech, setInformationTech] = useState<CurrentUser[]>([]);\n  const [marketing, setMarketing] = useState<CurrentUser[]>([]);\n  const [leadershipTeam, setLeadershipTeam] = useState<CurrentUser[]>([]);\n\n  useEffect(() => {\n    if (!localCache.employees.length) {\n      setAccounting(Array(5).fill(undefined));\n      setInformationTech(Array(5).fill(undefined));\n      setMarketing(Array(5).fill(undefined));\n      setLeadershipTeam(Array(2).fill(undefined));\n      void requestEmployees();\n    } else {\n      setAccounting(localCache.employees[0]);\n      setInformationTech(localCache.employees[1]);\n      setMarketing(localCache.employees[2]);\n      setLeadershipTeam(localCache.employees[3]);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  async function requestEmployees() {\n    try {\n      // from https://randomuser.me/documentation\n      const res = await fetch(\"https://randomuser.me/api/?results=17\");\n      const json = (await res.json()) as RandomUserAPIResponse;\n      const chunked = chunk(json.results, 5);\n\n      setEmployees(chunked);\n      localCache.employees = chunked;\n      setAccounting(chunked[0]);\n      setInformationTech(chunked[1]);\n      setMarketing(chunked[2]);\n      setLeadershipTeam(chunked[3]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function chunk(arr: CurrentUser[], len: number) {\n    const chunks = [];\n    let i = 0;\n\n    while (i < arr.length) {\n      chunks.push(arr.slice(i, (i += len)));\n    }\n    return chunks;\n  }\n\n  return (\n    <div>\n      <h1>Employees</h1>\n      <CardList\n        headingTitle=\"Leadership Team\"\n        unorderedListClass=\"employees\"\n        array={leadershipTeam}\n        Component={EmployeeListItem}\n        testId=\"leadership\"\n      />\n      <CardList\n        headingTitle=\"Accounting\"\n        unorderedListClass=\"employees\"\n        array={accounting}\n        Component={EmployeeListItem}\n        testId=\"accounting\"\n      />\n      <CardList\n        headingTitle=\"IT\"\n        unorderedListClass=\"employees\"\n        array={informationTech}\n        Component={EmployeeListItem}\n        testId=\"it\"\n      />\n      <CardList\n        headingTitle=\"Marketing\"\n        unorderedListClass=\"employees\"\n        array={marketing}\n        Component={EmployeeListItem}\n        testId=\"marketing\"\n      />\n    </div>\n  );\n};\n\nexport default Employees;\n","import Skeleton from \"react-loading-skeleton\";\nimport { FunctionComponent } from \"react\";\nimport { CurrentUser } from \"./APIResponsesTypes\";\n\nconst EmployeeListItem: FunctionComponent<CurrentUser> = (item) => {\n  return (\n    <li>\n      <div className=\"flex my-5\">\n        <div className=\"hidden sm:block sm:mr-4\">\n          {item.picture ? (\n            <img\n              src={item.picture.medium}\n              alt={`${item.name.first} ${item.name.last}`}\n              className=\"rounded-3xl employee-img\"\n            />\n          ) : (\n            <Skeleton height={100} width={100} />\n          )}\n        </div>\n        <div className=\"flex-shrink self-center w-full\">\n          {item.name ? (\n            <div className=\"text-lg\">\n              {item.name.title} {item.name.first} {item.name.last}\n            </div>\n          ) : (\n            <Skeleton />\n          )}\n          {item.email ? (\n            <div>\n              <a href={`mailto:${item.email}`} className=\"text-gray-600\">\n                {item.email}\n              </a>\n            </div>\n          ) : (\n            <Skeleton />\n          )}\n          {item.phone ? (\n            <a href={`tel:${item.phone}`} className=\"text-gray-600\">\n              {item.phone}\n            </a>\n          ) : (\n            <Skeleton />\n          )}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default EmployeeListItem;\n","import { FunctionComponent, ElementType } from \"react\";\nimport { CurrentUser } from \"./APIResponsesTypes\";\n\ninterface EProps {\n  headingTitle: string;\n  unorderedListClass: string;\n  array: CurrentUser[];\n  Component: ElementType;\n  testId: string;\n}\n\nconst CardList: FunctionComponent<EProps> = ({\n  headingTitle,\n  unorderedListClass = \"\",\n  array,\n  Component,\n  testId,\n}) => {\n  return (\n    <div\n      className=\"py-10 bg-white shadow-lg rounded-3xl sm:p-20 my-5\"\n      data-testid={testId}\n    >\n      <h2>{headingTitle}</h2>\n      <ul className={unorderedListClass}>\n        {array.map((item, index) => {\n          return <Component key={index} {...item} />;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default CardList;\n"],"names":["$fe0caebe5ee720c1$var$_EmployeeListItem","$fe0caebe5ee720c1$var$_interopRequireDefault","parcelRequire","$fe0caebe5ee720c1$var$_CardList","localCache","employees","Employees","setEmployees","$gctDA","useState","accounting","setAccounting","informationTech","setInformationTech","marketing","setMarketing","leadershipTeam","setLeadershipTeam","useEffect","length","Array","fill","undefined","res","fetch","chunked","arr","len","chunks","i","push","slice","chunk","json","results","error","console","log","requestEmployees","$bIkCC","jsxs","children","jsx","default","headingTitle","unorderedListClass","array","Component","EmployeeListItem","testId","$8042582487794704$var$_reactLoadingSkeleton","item","className","picture","src","medium","alt","name","first","last","height","width","title","email","href","phone","CardList","map","index"],"version":3,"file":"Employees.4ea6c185.js.map"}
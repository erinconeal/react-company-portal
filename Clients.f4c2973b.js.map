{"version":3,"sources":["ClientForm.js","ClientCard.js","ClientSkeleton.js","Clients.js"],"names":["ClientForm","Component","formInputs","address","suite","city","street","zipcode","company","name","website","email","phone","event","optionalObjTitle","target","inputValue","type","checked","value","stateCopy","Object","assign","state","setState","props","submitAction","onCancelAddClient","onCancelUpdateClient","Error","componentDidMount","client","handleSubmitClient","onAddClient","onUpdateClient","id","render","title","e","preventDefault","handleInputChange","submitButtonText","handleCancelButtonClick","ClientCard","handleDeleteClient","clientId","onDeleteClient","handleUpdateClient","ClientSkeleton","localCache","clients","Clients","showAddForm","status","updating","form","res","fetch","method","body","JSON","stringify","headers","json","error","console","log","remainingClients","filter","index","prevState","updatedClientIndex","findIndex","splice","toggleUpdateClient","length","Array","fill","handleAddButtonClick","addClient","cancelAddClient","map","isUpdating","loading","loaded","clientID","updateClient","deleteClient"],"mappings":";;;;;;;ACAA,ADAA,AEAA,ACAA;;ADCA,ACAA;;AFCA,AEAA,MFAM2C,UAAN,SAAyB1C,gBAAzB,CAAmC;AACjC2C,EAAAA,kBAAkB,CAACC,QAAD,EAAW;AAC3B,ADFJ,AGCA,MHDM7C,KCEK,KAAKyB,ADFhB,KCEW,CAAWqB,GDFG7C,WCEd,CAA0B4C,IDFrC,CAAmC,GCExB,CAAP;AACD,ADHgC;AAAA,AECnC,ACCA,MDDMG,cAAN,SAA6B/C,gBAA7B,CAAuC;ADGrC8C,ACFAX,EDEAW,ACFAX,MAAM,GAAG,SDES,GAAG;AACnB,ADL+B,AEG/B,WDEO,KAAKX,KAAL,CAAWS,aDJZ,CCIC,EAAP;AACD,ADJChC,AECA,MFDAA,UAAU,EAAE;AACVC,AECA,QFDAA,OAAO,EAAE;ACKbiC,ADJMhC,AEAG,EDITgC,MAAM,ACJG,EFAHhC,CCIG,IDJE,EAAE,AEAK,EFDL,AECM,aAAf;ADKF,ADJIC,AEDF,UDKI,ADJFA,IAAI,EAAE,EAFC;ACMH0B,ADHJzB,AEFF,MDKMyB,IDHJzB,MAAM,EAAE,EAHD;ACML,ADFFC,AEFA,ACDR,MAAM0C,EFKiB,EDFf1C,GCEoBkB,GELZ,CHGD,CCEX,CDFa,AGHE;AFMf,ADPW,AEEP,ACANyB,EAAAA,OHHc,AGGP,EAAE;AFKP,ADDE1C,AEJE,ACDW,CAAnB,OHKMA,OAAO,EAAE;ACET,ADFWC,AEHP,UFGOA,IAAI,EAAE,eEHZ,6BAAD;ADKC,ADFI,AEJP,ACGR,MAAM0C,EFGK,CDTK,CEEV,GCIN,IFGoB,EAAC,GEHClD,UFGhB,MEHN,CAAgC;AFG1B,ADDAS,AENA,ACI0B,QHE1BA,OAAO,EAAE,EARC;ACSV,ADAAD,AEHE,ACAwB,QHG1BA,IAAI,EAAE,EATI,aEMP,6BAAD,KAJF;ADQE,ADAFE,AERA,QFQAA,KAAK,EAAE,EAVG;ACUR,ADCFC,AEJE,ACDwB,QHK1BA,KAAK,EAAE,KCDAmB,MAAM,CAACvB,OAAP,CAAeC,AEHlB;AFGF,ADVQ,AEOH,ACCTyC,MAAAA,IFCE,ACFO,EDIJnB,CEHE,EAAE,EADH,CFIK,CAACrB,ACJM,EAAC,KDId,mCCJD;ADIC,ADZC,AEQF,ACEJ0C,KHX+B,CGW/BA,WAAW,EAAE,KAFP;AFIgB,ACJlB,ACGJC,MAAAA,MAAM,EAAE,UAHF;AFImB,ADbM,AEUzB,ACGNC,MAAAA,IFAyB,IAAI,AEArB,EFAuBvB,AEArB,MFA2B,CAACrB,OAAhB,CCHf,gBFaW,CAACG,KAAD,EAAQC,KEbpB,WFaoC,GAAG,EAA3B,KAAkC;ACV9B,ADWtB,AEdgB,ACDV,KADsB,OHgBtBC,AEdU,KAAK,CFcT,CEdW,CDGyBgB,CDWjClB,KCXuC,ADWlC,CCXmCH,ADWlCK,MAArB;ACXsB,ADYtB,AEfM,UDGD,EDYCC,AEhBF,CDIkE,IAFpE,KDcc,GACdD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACI,KADvD;ACdE,ADgBF,AElBI,ACDwB,YHmBtBV,IAAI,GAAGM,MAAM,CAACN,IAApB,oBGWqB,MAAM;AFxBvB,ADcJ,AEjBM,AC4BN,UHXIW,CGWCI,QHXQ,AGWb,CAAcH,EHXEA,IGWI,CAACC,CHXC,CAACA,IGWT,CAAc,CHXZ,CAAc,EAAd,EAAkB,KAAKC,KAAvB,CAAhB;ACdS,ADeTT,AElBM,AC4BwBsC,MHV9BtC,EGU8BsC,EFzBrB,SAAS,AEyBuB,EFzBtB,AEyBwB,CHV3B,AGU4B,GHTvChC,EGS4CG,KAAL,CAAW6B,CHTzC,CAAClD,UAAV,CAAqBY,eChBtB,CDgBC,EAAuCL,IAAvC,IAA+CO,UADpC,GAEXI,SAAS,CAAClB,UAAV,CAAqBO,IAArB,IAA6BO,UAFlC;ACfI,ADmBJ,AEtBM,AC4BsB,OAAd,CAAd,GHNKQ,QAAL,CAAcJ,SAAd;ACnBI,ADoBL,AEtBS,AC4BT,KHxCgC,AGQH;AFOtB,ACHE;ADGF,ADfyB,AEYvB,ACJoB,cDGtB,yBC+BI,MAAOmC,IAAP,IHNc,AGME,MHNI;ACrBxB,ADsBN,AE1BM,ACgCN,UAAI,IHNI,KAAK9B,KAAL,CAAWC,YAAnB;ACrBQ,ADsBN,AEzBM,AC+BN,aHNK,CGMC8B,GAAG,GAAG,IHNZ,EGMkBC,KAAK,CAAC,CD/BjB,6BAAD,cC+BiB,EAA+C;AF5BhE,ADuBJ,AE1Bc,ACgCdC,UAAAA,IDhCc,ECgCR,CHNC,CGMC,CDhCW,EAAE,CF0BTjC,ECvBJM,AE4B4D,GHL7D,CAAWJ,ECvBJ,EAAExB,OAAR,EAAiBC,IDuBlB,EAAP;ACvBI,ACHA,ACiCJuD,UAAAA,IF/BE,ACJA,ACmCE,EAAEC,IAAI,CAACC,SAAL,CAAe,EACnB,GAAGN;AFhCH,ADyBJ,AE7BI,ACmCmB,WAAf,CDrCN,ACmCoE,CHJjE,cAAL;ACvBM,ADwBJ,AEhCA,ACwCAO,UD7CF,AC6CEA,OHRO,AGQA,EAAE,GHRGrC,KAAL,CAAWG,oBAAX,EAAP;ACxBI,ACbN,AC8CI,wBFjCMG,IEiCU,EFjCJ,EAAE5B,OAAR,EAAiBG;AAArB,ADyBN,AEvCF,AC8Ca,cFlCP;AAAA,AD4BF,AEzBL,AC0ByE,SAA/C,CAAvB,MHDQ,IAAIuB,KAAJ,EAAN;ACzBI,ADmBR,AGgBE,cAAMkC,IAAI,GAAG,MAAMP,GAAG,CAACO,IAAJ,EAAnB;AFnCM,AD2BT,AE5CoC,ACqDjC,KHtD6B,QGsDxBvC,QAAL,CAAc,EFpCJO,MAAM,EAAE5B,OAAR,EAAiBE;AAArB,ADlBuB,AGuD3B6C,UAAAA,IFxCE,GEwCK,EAAE,CAAC,GAAG,KAAK3B,KAAL,CAAW2B,OAAf,EAAwBa,IAAxB,CADG;AFvCV,AEyCFX,UAAAA,KDnCOJ,MCmCI,EAAE;AFrCT,ADFVlB,AGqCkB,EHrClBA,OGqCI,UHrCa,GAAG;ACEV,ADDR,AGwCEmB,QHxCE,AGwCFA,KHxCOxB,KAAL,AGwCQ,CHxCGM,AGwCFmB,KFvCDnB,CDDZ,CGwCE,CHxCqB,EGwCA,CFvCL,EAAE5B,EEuCQoB,KFvChB,AEuCW,CAAW2B,CFvCL3C,MEuC3B;AFvCM,ADAN,AGwCD,OAhBD,CAgBE,GHxCKiB,GCJD,CE4CGwC,IHxCP,CAAc3C,AGwCd,EAAc,IHxCM,CAACC,MAAP,CAAc;ACJxB,ADI0BpB,AGyC9B+D,QHzC8B/D,AGyC9B+D,IF9CE,GE8CK,CAACC,EHzCgC,CGyCxC,CHzC0C,AGyC9BF,KHzCmCvC,AGyC/C,KHzC0C,CAAWM;ACLnD,ADK0B,AG0C7B,OH1Ce,CAAd;ACEI,ADDL,AG0CF,KAtD6B;AFatB,ADAP;ACAO,AEbsB,6CAwDZ,MAAM;AF1Cd,ADyBVC,AGkBE,EHlBFA,SGkBOR,QAAL,CHlBgB,AGkBF,GHlBK;ACzBX,AD0BR,AGiBgB4B,QAAAA,IHjBR,KAAK3B,EGiBc,EAAE,CHjBrB,CAAWC,YAAnB;AC1BQ,AD2BN,AGgBY,OAAd,IHhBO,GC5BD,QD4BJ;AC5BI,AD6BF,AGgBL,KA1D6B,UH0CjB,KAAKD,KAAL,CAAWQ,WAAX,CAAuB,KAAKV,KAAL,CAAWrB,UAAlC,CAAP;AC3BI;AAAA,AD4BN,AG3C0B,WH2CrB,aC5BK6B,CD4BV,KC5BgB,CAACtB,WE6CN,MAAOoC,QAAP,IAAoB;AF7CzB,AD6BJ,AGiBJ,UAAI,IFhDE,CD+BK,KAAKpB,KAAL,CAAWS,cAAX,CACL,KAAKX,KAAL,CAAWrB,UADN,EAEL,KAAKuB,KAAL,CAAWM,MAAX,CAAkBI,EAFb,CAAP;AC/BE,AEiDJ,cAAMsB,KAAK,CAAE,8CAA6CZ,QAAS,EAAxD,EAA2D;AF9ChE,ADgCN,AGeEa,UAAAA,MAAM,EAAE;AF/CJ,ADiCJ,AGaoE,SAA3D,CAAX,IHbQ,IAAI7B,KAAJ,EAAN;ACjCI,ADwBR,AGyBE,cAAMsC,gBAAgB,GAAG,KAAK5C,KAAL,CAAW2B,OAAX,CAAmBkB,MAAnB,CACtBrC,MAAD,IAAYA,MAAM,CAACI,EAAP,KAAcU,QADH,CAAzB;AFhDQ,ADkCX,AGiBG,aAAKrB,QAAL,CAAc;AFnDH,AEmDK0B,UAAAA,MFnDL,CEmDY,EAAEiB,CFnDV,EAAEpC,MAAM,CAACpB,KAAhB;AAAA,ADoCZyB,AGekB,EHflBA,MAAM,CGeF,EHfK,eCpC2BL,MAAM,CAACpB;AAA/B,ADqCV,AGeEsC,QAAAA,EHfI,QGeM,CAACC,OAAX,GAAqB,KAAK3B,KAAL,CAAW2B,OAAhC;AFrDM,ADuCNxC,AGeD,MHfCA,CGMF,CASE,KHhBI,CCzCA,CEyDGsD,KAAP,EAAc;AFzDV,AD2CJvD,AGeAwD,MHfAxD,EGeAwD,EHjBI,KGiBG,CAACC,GAAR,CAAYF,KAAZ;AFpDM,ADsCNrD,AGeD,MHfCA,KAHI;ACnCK,ADuCTC,AGeH,KAzE6B,CH0D1BA,KAJI,GCnCK,IAAI,EAAEmB,MAAM,CAACnB,KAAhB;AAAA,ADwCNT,MAAAA,OAAO,EAAE,SCxCqB4B,MAAM,CAACnB;AAA/B,ADwCKR,AG3De,QH2DfA,KAAF,CC9CL,kCE8DciE,KAAD,IAAW;AF9DxB,AD8Cc/D,AGiBpB,QHjBoBA,GGiBfkB,CFtED,EDqDO,KGiBX,CAAe8C,SAAD,IAAe;AFtEzB,ADqDwBjE,AGkB1B,QHlB0BA,ECxD1B,EDwDS,EGkBHiD,QAAQ,GAAG,EAAE,GAAGgB,SAAS,CAAChB;AF1EhC,ADwDgC/C,AGkBf,QHlBeA,CGkBhC;AFvDE,ADqCO,AGmBT+C,QAAAA,QAAQ,CAACe,KAAD,CAAR,GAAkB,CAACf,QAAQ,CAACe,KAAD,CAA3B;AFxDO,ADgCH,AGyBJ,QHnBE,ECtCK,GDsCA9C,EGmBA,GHnBL,CCtCc,ADsCHrB,ECtCI,QDgCnB,aChCI;AAAA,ADwCJ,AGiBWoD,UAAAA;AFzDP,ADwCJ,AGiBS,SAAP;AFxDI,ADwCJ,AGiBD,OAJD;AFpDQ,ADuCD,AGkBR,KAjF6B,GH+DrB,ICvCC,KDuCQ,EAAC,ECvCA,EAAC,SDuChB,UCxCI;AAEE,ADsCN,YCtCM,OAAO,EAAE,MAAM,KAAKP,kBAAL,EAFjB;AAAA,ADwCJ,AG/D0B,0CAmFf,OAAOQ,IAAP,EAAaV,QAAb,EAAuBwB,KAAvB,KAAiC;AF5DxC,ADyCF,AGoBJ,UAAI,EF9DA;AAAA,AD0CA,AGqBF,cAAMb,GAAG,GHrBF,AGqBK,KHrBA/B,CGqBMgC,IHrBX,CAAWpB,AGqBK,CACpB,8CAA6CQ,QAAS,EADlC,EAErB;AF1DE,ADmCF,AGwBEa,UHzBJ,AGyBIA,MAAM,EAAE,KADV;AFzDI,ADiCN,AG0BIC,UAAAA,EF3DE,EE2DE,EAAEC,IAAI,CF3DC,AE2DAC,EF3DC,OE2DN,CAAe,QF5DrB;AAEE,ADkCJ,AGyBI1B,YF3DA,AE2DAA,EAAE,EAAEU,GF3DG,EAAE,GE0DU,GF1DJ,KAAKD,kBAAL,CAAwBb,MAAM,CAACI,EAA/B,CA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","file":"Clients.f4c2973b.js","sourceRoot":"../src","sourcesContent":["import { Component } from \"react\";\n\nclass ClientForm extends Component {\n  state = {\n    formInputs: {\n      address: {\n        suite: \"\",\n        city: \"\",\n        street: \"\",\n        zipcode: \"\",\n      },\n      company: { name: \"\" },\n      website: \"\",\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n    },\n  };\n\n  componentDidMount() {\n    if (this.props.client) {\n      this.setState(Object.assign({ formInputs: this.props.client }));\n    }\n  }\n\n  handleInputChange = (event, optionalObjTitle = \"\") => {\n    const target = event.target;\n    const inputValue =\n      target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    let stateCopy = Object.assign({}, this.state);\n    optionalObjTitle\n      ? (stateCopy.formInputs[optionalObjTitle][name] = inputValue)\n      : (stateCopy.formInputs[name] = inputValue);\n\n    this.setState(stateCopy);\n  };\n\n  handleCancelButtonClick = () => {\n    switch (this.props.submitAction) {\n      case \"addClient\":\n        return this.props.onCancelAddClient();\n      case \"updateClient\":\n        return this.props.onCancelUpdateClient();\n      default:\n        throw new Error();\n    }\n  };\n\n  handleSubmitClient() {\n    switch (this.props.submitAction) {\n      case \"addClient\":\n        return this.props.onAddClient(this.state.formInputs);\n      case \"updateClient\":\n        return this.props.onUpdateClient(\n          this.state.formInputs,\n          this.props.client.id\n        );\n      default:\n        throw new Error();\n    }\n  }\n\n  render() {\n    const {\n      website,\n      name,\n      email,\n      phone,\n      address: { suite, street, city, zipcode },\n    } = this.state.formInputs;\n\n    return (\n      <div className=\"border-card\">\n        <h2>{this.props.title}</h2>\n        <form\n          id=\"clientForm\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmitClient();\n          }}\n        >\n          <div className=\"form-input\">\n            <label htmlFor=\"companyName\">Company Name (required)</label>\n            <input\n              type=\"text\"\n              id=\"companyName\"\n              name=\"name\"\n              value={this.state.formInputs.company.name}\n              required\n              aria-required=\"true\"\n              onChange={(e) => this.handleInputChange(e, \"company\")}\n            />\n          </div>\n          <div className=\"form-input\">\n            <label htmlFor=\"website\">Website</label>\n            <input\n              type=\"text\"\n              id=\"website\"\n              name=\"website\"\n              value={website}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>\n            <h3>Client Address</h3>\n            <div className=\"grid sm:grid-cols-2 gap-4\">\n              <div className=\"form-input\">\n                <label htmlFor=\"suite\">Suite/Apt</label>\n                <input\n                  type=\"text\"\n                  id=\"suite\"\n                  name=\"suite\"\n                  value={suite}\n                  onChange={(e) => this.handleInputChange(e, \"address\")}\n                />\n              </div>\n              <div className=\"form-input\">\n                <label htmlFor=\"street\">Street (required)</label>\n                <input\n                  type=\"text\"\n                  id=\"street\"\n                  name=\"street\"\n                  required\n                  aria-required=\"true\"\n                  value={street}\n                  onChange={(e) => this.handleInputChange(e, \"address\")}\n                />\n              </div>\n              <div className=\"form-input\">\n                <label htmlFor=\"city\">City (required)</label>\n                <input\n                  type=\"text\"\n                  id=\"city\"\n                  name=\"city\"\n                  required\n                  aria-required=\"true\"\n                  value={city}\n                  onChange={(e) => this.handleInputChange(e, \"address\")}\n                />\n              </div>\n              <div className=\"form-input\">\n                <label htmlFor=\"zipcode\">Zip code (required)</label>\n                <input\n                  type=\"text\"\n                  id=\"zipcode\"\n                  name=\"zipcode\"\n                  required\n                  aria-required=\"true\"\n                  value={zipcode}\n                  onChange={(e) => this.handleInputChange(e, \"address\")}\n                />\n              </div>\n            </div>\n          </div>\n          <div>\n            <h3>Client Contact</h3>\n            <div className=\"form-input\">\n              <label htmlFor=\"fullName\">Full name (required)</label>\n              <input\n                type=\"text\"\n                id=\"fullName\"\n                name=\"name\"\n                required\n                aria-required=\"true\"\n                value={name}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"grid sm:grid-cols-2 gap-4\">\n              <div className=\"form-input\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={email}\n                  onChange={this.handleInputChange}\n                />\n              </div>\n              <div className=\"form-input\">\n                <label htmlFor=\"phone\">Phone number</label>\n                <input\n                  type=\"tel\"\n                  id=\"phone\"\n                  name=\"phone\"\n                  value={phone}\n                  onChange={this.handleInputChange}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex space-x-5 mt-5\">\n            <button className=\"btn btn-primary\">\n              {this.props.submitButtonText}\n            </button>\n            <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              onClick={this.handleCancelButtonClick}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ClientForm;\n","import { Component } from \"react\";\n\nclass ClientCard extends Component {\n  handleDeleteClient(clientId) {\n    return this.props.onDeleteClient(clientId);\n  }\n  handleUpdateClient() {\n    return this.props.onUpdateClient();\n  }\n\n  render() {\n    const { client } = this.props;\n    return (\n      <div className=\"border-card\">\n        <h2>{client.company.name}</h2>\n        {client.website ? <a href={client.website}>{client.website}</a> : null}\n        <div className=\"grid sm:grid-cols-2 gap-4 mt-7 clients\">\n          <div>\n            <p>{client?.address?.suite}</p>\n            <p>{client?.address?.street}</p>\n            <p>{client?.address?.city}</p>\n            <p>{client?.address?.zipcode}</p>\n          </div>\n          <div>\n            <p>Contact:</p>\n            <p>{client.name}</p>\n            <p>\n              <a href={client.email}>{client.email}</a>\n            </p>\n            <a href={client.phone}>{client.phone}</a>\n          </div>\n        </div>\n        <div className=\"flex space-x-5 mt-5\">\n          <button\n            className=\"btn btn-secondary\"\n            onClick={() => this.handleUpdateClient()}\n          >\n            Update\n          </button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => this.handleDeleteClient(client.id)}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClientCard;\n","import { Component } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\n\nclass ClientSkeleton extends Component {\n  render() {\n    return (\n      <div className=\"border-card\">\n        <h2>\n          <Skeleton />\n        </h2>\n        <Skeleton />\n        <div className=\"grid sm:grid-cols-2 gap-4 mt-7 clients\">\n          <Skeleton count={4} />\n          <div>\n            <p>Contact:</p>\n            <Skeleton count={3} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClientSkeleton;\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ClientForm from \"./ClientForm\";\nimport ClientCard from \"./ClientCard\";\nimport ClientSkeleton from \"./ClientSkeleton\";\n\nconst localCache = {\n  clients: [],\n};\n\nclass Clients extends Component {\n  state = {\n    clients: [],\n    showAddForm: false,\n    status: \"unloaded\",\n    updating: {},\n  };\n\n  async componentDidMount() {\n    if (localCache.clients.length) {\n      this.setState(\n        Object.assign({ clients: localCache.clients, status: \"loaded\" })\n      );\n      return;\n    }\n\n    try {\n      this.setState(\n        Object.assign({ clients: Array(10).fill(), status: \"loading\" })\n      );\n      // from https://jsonplaceholder.typicode.com/\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n      const json = await res.json();\n      this.setState(Object.assign({ clients: json, status: \"loaded\" }));\n      localCache.clients = json;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  handleAddButtonClick = () => {\n    this.setState(Object.assign({ showAddForm: !this.state.showAddForm }));\n  };\n\n  addClient = async (form) => {\n    try {\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/users\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          ...form,\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n      const json = await res.json();\n      this.setState({\n        clients: [...this.state.clients, json],\n        showAddForm: false,\n      });\n      localCache.clients = this.state.clients;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  cancelAddClient = () => {\n    this.setState({ showAddForm: false });\n  };\n\n  deleteClient = async (clientId) => {\n    try {\n      await fetch(`https://jsonplaceholder.typicode.com/users/${clientId}`, {\n        method: \"DELETE\",\n      });\n      const remainingClients = this.state.clients.filter(\n        (client) => client.id !== clientId\n      );\n      this.setState({ clients: remainingClients });\n      localCache.clients = this.state.clients;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  toggleUpdateClient = (index) => {\n    this.setState((prevState) => {\n      const updating = { ...prevState.updating };\n      updating[index] = !updating[index];\n      return { updating };\n    });\n  };\n\n  updateClient = async (form, clientId, index) => {\n    try {\n      const res = await fetch(\n        `https://jsonplaceholder.typicode.com/users/${clientId}`,\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            id: clientId,\n            ...form,\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n          },\n        }\n      );\n      const json = await res.json();\n      const updatedClientIndex = this.state.clients.findIndex(\n        (client) => client.id === clientId\n      );\n      this.state.clients.splice(updatedClientIndex, 1);\n      this.setState({\n        clients: [...this.state.clients, json],\n        showAddForm: false,\n      });\n      localCache.clients = this.state.clients;\n      this.toggleUpdateClient(index);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"flex-col sm:flex sm:flex-row sm:items-baseline sm:justify-between\">\n          <h1>Clients</h1>\n          <button\n            type=\"button\"\n            className=\"ml-4 sm:ml-0 btn btn-primary\"\n            onClick={this.handleAddButtonClick}\n          >\n            {this.state.showAddForm ? \"Close\" : \"Add\"}\n          </button>\n        </div>\n        {this.state.showAddForm ? (\n          <ClientForm\n            onAddClient={this.addClient}\n            title=\"Add new client\"\n            submitButtonText=\"Add client\"\n            submitAction=\"addClient\"\n            onCancelAddClient={this.cancelAddClient}\n          />\n        ) : null}\n        {this.state.clients.map((client, index) => {\n          const isUpdating = this.state.updating[index];\n          return {\n            loading: <ClientSkeleton key={index} />,\n            loaded: isUpdating ? (\n              <ClientForm\n                client={client}\n                key={index}\n                onUpdateClient={(formInputs, clientID) =>\n                  this.updateClient(formInputs, clientID, index)\n                }\n                title=\"Update\"\n                submitButtonText=\"Update\"\n                submitAction=\"updateClient\"\n                onCancelUpdateClient={() => this.toggleUpdateClient(index)}\n              />\n            ) : (\n              <ClientCard\n                client={client}\n                key={index}\n                onDeleteClient={this.deleteClient}\n                onUpdateClient={() => this.toggleUpdateClient(index)}\n              />\n            ),\n          }[this.state.status];\n        })}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Clients);\n"]}
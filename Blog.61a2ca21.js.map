{"version":3,"sources":["Blog.js"],"names":["Blog","data","setData","requestData","requestPosts","res","fetch","json","error","console","log","requestImages","posts","images","Promise","all","combinedData","map","item","i","Object","assign","d","download_url","title","body","id"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB,qBAAS,EAAT,CAAxB;AAEA,wBAAU,MAAM;AACdC,IAAAA,WAAW;AACZ,GAFD,EAEG,EAFH,EAHiB,CAKT;;AAER,iBAAeC,YAAf,GAA8B;AAC5B,QAAI;AACF;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACA,aAAOA,IAAP;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAED,iBAAeG,aAAf,GAA+B;AAC7B,QAAI;AACF;AACA,YAAMN,GAAG,GAAG,MAAMC,KAAK,CAAC,yCAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACA,aAAOA,IAAP;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAED,iBAAeL,WAAf,GAA6B;AAC3B,UAAM,CAACS,KAAD,EAAQC,MAAR,IAAkB,MAAMC,OAAO,CAACC,GAAR,CAAY,CACxCX,YAAY,EAD4B,EAExCO,aAAa,EAF2B,CAAZ,CAA9B;AAIA,UAAMK,YAAY,GAAGJ,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAC7BC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,IAAlB,EAAwBL,MAAM,CAACM,CAAD,CAA9B,CADmB,CAArB;AAGAV,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,YAApB;AACAd,IAAAA,OAAO,CAACc,YAAD,CAAP;AACD;;AAED;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA,QADF;AAAA;AAEE;AAAI,QAAA,SAAS,EAAC,0CAAd;AAAA,kBACGf,IAAI,CAACgB,GAAL,CAAUK,CAAD,IAAO;AACf;AAAA;AACE;AAAe,cAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AACE;AAAK,gBAAA,GAAG,EAAC,EAAT;AAAY,gBAAA,GAAG,EAAEA,CAAC,CAACC;AAAnB,gBADF;AAAA;AAEE;AAAA,0BAAKD,CAAC,CAACE;AAAP,gBAFF;AAAA;AAGE;AAAA,0BAAIF,CAAC,CAACG;AAAN,gBAHF;AAAA,eAASH,CAAC,CAACI,EAAX;AADF;AAOD,SARA;AADH,QAFF;AAAA;AADF;AAgBD,CAzDD;;eA2De1B","file":"Blog.61a2ca21.js","sourceRoot":"../src","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst Blog = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    requestData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  async function requestPosts() {\n    try {\n      // from https://jsonplaceholder.typicode.com/\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n      const json = await res.json();\n      return json;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function requestImages() {\n    try {\n      // from https://picsum.photos/\n      const res = await fetch(\"https://picsum.photos/v2/list?limit=100\");\n      const json = await res.json();\n      return json;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function requestData() {\n    const [posts, images] = await Promise.all([\n      requestPosts(),\n      requestImages(),\n    ]);\n    const combinedData = posts.map((item, i) =>\n      Object.assign({}, item, images[i])\n    );\n    console.log(\"data\", combinedData);\n    setData(combinedData);\n  }\n\n  return (\n    <div>\n      <h1>Blog</h1>\n      <ul className=\"grid grid-flow-cols sm:grid-cols-2 blogs\">\n        {data.map((d) => {\n          return (\n            <li key={d.id} className=\"pr-5\">\n              <img alt=\"\" src={d.download_url} />\n              <h2>{d.title}</h2>\n              <p>{d.body}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Blog;\n"]}